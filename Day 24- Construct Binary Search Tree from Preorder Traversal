
 /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    TreeNode getNode(int val){
        TreeNode root=new TreeNode();
        root.val=val;
        return root;
    }
    public TreeNode bstFromPreorder(int[] preorder) {
        
       Stack<TreeNode> stk=new Stack<>();
        TreeNode root=getNode(preorder[0]);
        stk.push(root);
        for(int i=1;i<preorder.length;i++){
            TreeNode temp=null;
            while(!stk.isEmpty()&&preorder[i]>stk.peek().val)
                temp=stk.pop();
            if(temp!=null){
                temp.right=getNode(preorder[i]);
                stk.push(temp.right);
                
            }
            else{
                temp=stk.peek();
                temp.left=getNode(preorder[i]);
                stk.push(temp.left);
            }
        }
             
             
         
        return root;
    }
}
