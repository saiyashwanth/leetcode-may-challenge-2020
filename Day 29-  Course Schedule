 


class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        if(numCourses==0||prerequisites.length==0)return true;
        Map<Integer,ArrayList<Integer>> map=new HashMap<>();
        int indegree[]=new int[numCourses];
        for(int i=0;i<numCourses;i++)
            map.put(i,new ArrayList<Integer>());
        
         for(int i=0;i<prerequisites.length;i++){
               map.get(prerequisites[i][0]).add(prerequisites[i][1]);
               indegree[prerequisites[i][1]]++;
         }
        
        Queue<Integer> q=new LinkedList<>();
        
        int count=numCourses;
        
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0)
                q.add(i);
        }
        while(!q.isEmpty()){
            int curr=q.remove();
           for(int i:map.get(curr)){
               if( --indegree[i]==0)
                   q.add(i);}
            count--;
        }
        
        return count==0;
        
    }
}
