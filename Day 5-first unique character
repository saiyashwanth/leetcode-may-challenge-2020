 class Solution {
    public int firstUniqChar(String s) {
    //all are working approaches I came up with all these approaches to see which one giving better complexity
      /*  for(int i=0;i<s.length();i++)
        
            if(i==s.indexOf(s.charAt(i))&&i==s.lastIndexOf(s.charAt(i)))return i;
        return -1;*/
        
     /* 
        Map<Character,Integer> map=new LinkedHashMap<>();
        
        for(int i=0;i<s.length();i++)
            map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
        
         for(int i=0;i<s.length();i++)
           if(map.get(s.charAt(i))==1)return i;
        return -1;*/
        int []freq=new int[26];
        
          for(int i=0;i<s.length();i++)
            freq[s.charAt(i)-'a']++;
        
           for(int i=0;i<s.length();i++)
            if(freq[s.charAt(i)-'a']==1)return i;
        return -1;
                    
    }
}
