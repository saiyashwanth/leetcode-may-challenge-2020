class Solution {
    /*public int findJudge(int N, int[][] trust) {
  
        if(N==1) return 1;
      
        Map<Integer,Integer> map2=new HashMap<>();
         Map<Integer,Integer> map1=new HashMap<>();
     
        for(int i=0;i<trust.length;i++){
        
           map1.put(trust[i][0],trust[i][1]);
    
            map2.put(trust[i][1],map2.getOrDefault(trust[i][1],0)+1);
        }
       
         for(int i=0;i<trust.length;i++)
          if(map2.get(trust[i][1])==N-1&&map1.get(trust[i][1])==null)return trust[i][1];
        return -1;
         
       
    }*/
    
    public int findJudge(int N, int[][] trust) {
  int []count=new int[N+1];
        for(int i=0;i<trust.length;i++){
            count[trust[i][0]]--;
            count[trust[i][1]]++;

        }
        for(int i=1;i<=N;i++)
            if(count[i]==N-1)return i;
        return -1;
       
    }
}
